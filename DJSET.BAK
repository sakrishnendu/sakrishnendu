#include<stdio.h>
#include<conio.h>
struct disjset
 {
  int parent[10];
  int rank[10];
  int n;
 }
dis;
void makeset()
{
 int i;
 for(i=0;i<=dis.n;i++)
  {
   dis.parent[i]=i;
   dis.rank[i]=0;
  }
}
void display()
{
 int i;
 printf("\n Parent Array: \n");
 for(i=0;i<=dis.n;i++)
  {
   printf("%d",dis.parent[i]);
  }
 printf("\n Rank Array: \n");
 for(i=0;i<=n;i++)
  {
   printf("%d",dis.rank[i]);
  }
  printf("\n");
}
int find(int x)
{
 if(dis.parent[x]!=x)
   {
    dis.parent[x]=find(dis.parent[x]);
   }
   return dis.parent[x];
}
void Union(int x, int y)
{
 int xset=find(x);
 int yset=find(y);
 if(xset==yset)
  return;
if(dis.rank[xset]<dis.rank[yset])
 {
  dis.parent[xset]=yset;
  dis.rank[xset]=-1;
 }
else if(dis.rank[xset]>dis.rank[yset])
 {
  dis.parent[yset]=xset;
  dis.rank[yset]=-1;
 }
else
 {
  dis.parent[yset]=xset;
  dis.rank[x]=dis.rank[x]+1;
  dis.rank[yset]=-1;
 }
}
void main()
{
 int n,x,y,ch;
 clrscr();
 printf("\n how many elements: \n");
 scanf("%d",&dis.n);
 makeset();

 while(1)
  {
   printf("\n Perform Disjoint operation\n");
   printf("\n1.Union\n 2.Find\n 3.Display\n 4.Exit\n");
   printf("\Enter your choice\n");
   scanf("%d",&ch);
   switch(ch)
   {

    case 1: printf("Enter elements to perform Union\n");
	    scanf("%d%d",&x,&y);
	    Union(x,y);
	    break;

    case 2: printf("check if the elements are connected components\n");
	    scanf("%d%d",&x,&y);
	    if(find(x)==find(y))
	     {
	      printf("elements are connected\n");
	     }
	     else
	     {
	      printf("elements not connected\n");
	     }
	     break;

    case 3: display();
	    break;

    case 4: exit(0);
	    break;

	}
   }
 }


